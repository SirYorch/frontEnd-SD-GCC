services:
  db_master:
    image: postgres:15
    container_name: postgres-master
    environment:
      POSTGRES_USER: usuario
      POSTGRES_PASSWORD: clave
      POSTGRES_DB: midb
    ports:
      - "5432:5432"
    volumes:
      - postgres_master_data:/var/lib/postgresql/data
      - ./master/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./master/pg_hba.conf:/etc/postgresql/pg_hba.conf
    command:
      -c wal_level=replica
      -c max_wal_senders=5
      -c max_replication_slots=5
      -c listen_addresses='*'
      -c hba_file=/etc/postgresql/pg_hba.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U usuario -d midb"]
      interval: 10s
      timeout: 5s
      retries: 5

  db_slave:
    image: postgres:15
    container_name: postgres-slave
    environment:
      POSTGRES_USER: usuario
      POSTGRES_PASSWORD: clave
    entrypoint: ["/bin/bash", "/docker-entrypoint-initdb.d/entrypoint.sh"]
    volumes:
      - postgres_slave_data:/var/lib/postgresql/data
      - ./slave/entrypoint.sh:/docker-entrypoint-initdb.d/entrypoint.sh
    depends_on:
      db_master:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U usuario -d midb"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend1:
    build: ./Backend
    container_name: backend1
    environment:
      PORT: 8765
      DB_HOST: db_master
      DB_PORT: 5432
      DB_NAME: midb
      DB_USER: usuario
      DB_PASS: clave
    expose:
      - "8765"
    depends_on:
      db_master:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8765/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  backend2:
    build: ./Backend
    container_name: backend2
    environment:
      PORT: 8765
      DB_HOST: db_master
      DB_PORT: 5432
      DB_NAME: midb
      DB_USER: usuario
      DB_PASS: clave
    expose:
      - "8765"
    depends_on:
      db_master:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8765/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  nginx:
    build: ./Frontend
    container_name: nginx_proxy
    ports:
      - "80:80"
    depends_on:
      backend1:
        condition: service_healthy
      backend2:
        condition: service_healthy

volumes:
  postgres_master_data:
  postgres_slave_data:
